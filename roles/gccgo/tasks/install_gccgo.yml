---
- name: Creates gccgo folder
  file: "path={{gcc_path}} state=directory"
  sudo: no

- name: Download GCC
  get_url: "url={{gcc_download_url}} dest={{gcc_archive_path}}"
  sudo: no
  retries: 3

- name: Unarchive GCC
  unarchive: "src={{gcc_archive_path}} dest={{gcc_path}} copy=no"
  sudo: no

- name: Rename folder with GCC sources
  # I use copy here just not to repeat previous task every time
  shell: "rsync -r {{gcc_path}}/gcc-{{gcc_version}}/* {{gcc_source_path}} creates={{gcc_source_path}}"

- name: Creates gccgo build folder
  file: "path={{gcc_build_path}} state=directory"
  sudo: no

- name: Configure GCC
  sudo: no
  shell: >
    ../src/configure --enable-threads=posix --enable-shared --enable-__cxa_atexit \
      --enable-languages=c,c++,go --enable-secureplt --enable-checking=yes --with-long-double-128 \
      --enable-decimal-float --disable-bootstrap --disable-alsa --disable-multilib \
      --prefix=/usr/local/gccgo
    chdir={{gcc_build_path}}
    creates={{gcc_build_path}}/Makefile

- name: Run make
  sudo: no
  shell: "make chdir={{gcc_build_path}} creates={{gcc_build_path}}/gcc"

- name: Run make install
  sudo: yes
  shell: "make install chdir={{gcc_build_path}} creates={{go_root}}/bin/go"

- name: See if environment for Go is already set
  command: "grep GOROOT /home/{{ansible_ssh_user}}/.bashrc"
  register: goroot_variable_from_env
  ignore_errors: True

- name: Set environment variables
  shell: "echo '{{item}}' >> /home/{{ansible_ssh_user}}/.bashrc"
  with_items:
    - "export GOROOT={{go_root}}"
    - "export GOPATH={{go_path}}"
    - "export PATH={{go_root}}/bin:{{go_path}}/bin:{{standard_path}}"
    - "export LD_LIBRARY_PATH={{go_root}}/lib64"
  when: (goroot_variable_from_env.stdout == "")

---

- name: Install BOSH CLI
  shell: "gem install bosh_cli --version '1.2922.0' -- --use-system-libraries"
  environment: ruby_environment

- gem: name=nats state=latest
  environment: ruby_environment

- name: Get bosh-init
  shell: "go get -d github.com/cloudfoundry/bosh-init"
  args: {creates: "{{go_path}}/src/github.com/cloudfoundry/bosh-init/"}
  environment: go_environment

- name: "Revert bosh-init (freeze the version to v0.0.43)"
  shell: "git checkout tags/v0.0.43"
  args: {chdir: "{{go_path}}/src/github.com/cloudfoundry/bosh-init/"}

- name: Build bosh-init
  shell: "./bin/build"
  args:
    chdir: "{{go_path}}/src/github.com/cloudfoundry/bosh-init/"
    creates: "{{go_path}}/src/github.com/cloudfoundry/bosh-init/out/bosh-init"
  environment: go_environment

- name: Add bosh-init path to $PATH
  sudo: yes
  file: "src={{go_path}}/src/github.com/cloudfoundry/bosh-init/out/bosh-init"
  args:
    mode: 755
    dest: /usr/local/bin/bosh-init
    state: link

- name: Get cloudfoundry CLI
  shell: "go get -d github.com/cloudfoundry/cli"
  args: {creates: "{{go_path}}/src/github.com/cloudfoundry/cli/"}
  environment: go_environment

- name: "Revert CF CLI (freeze the version to v6.11.2)"
  shell: "git checkout tags/v6.11.2"
  args: {chdir: "{{go_path}}/src/github.com/cloudfoundry/cli/"}

- name: Build CF CLI
  shell: "./bin/build"
  args:
    chdir: "{{go_path}}/src/github.com/cloudfoundry/cli/"
    creates: "{{go_path}}/src/github.com/cloudfoundry/cli/out/cf"
  environment: go_environment

- name: Add bosh-init path to $PATH
  sudo: yes
  file: "src={{go_path}}/src/github.com/cloudfoundry/cli/out/cli"
  args:
    mode: 755
    dest: /usr/local/bin/cli
    state: link

- name: Install Spiff
  shell: "go get github.com/cloudfoundry-incubator/spiff"
  sudo: no
  environment: go_environment
  args:
    creates: "{{go_path}}/src/github.com/cloudfoundry-incubator/spiff"

